# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }: {
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "xhci_pci" "thunderbolt" "nvme" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ "i915" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [ "mem_sleep_default=deep" ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/ac39db5a-9050-48b6-95e5-96e165853d79";
    fsType = "btrfs";
  };

  boot.initrd.luks.devices."enc".device =
    "/dev/disk/by-uuid/826c7db4-6b05-488f-884f-d85107667670";

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/ac39db5a-9050-48b6-95e5-96e165853d79";
    fsType = "btrfs";
    options = [ "subvol=nix" ];
  };

  fileSystems."/efi" = {
    device = "systemd-1";
    fsType = "autofs";
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/ac39db5a-9050-48b6-95e5-96e165853d79";
    fsType = "btrfs";
    options = [ "subvol=home" ];
  };

  fileSystems."/var/log" = {
    device = "/dev/disk/by-uuid/ac39db5a-9050-48b6-95e5-96e165853d79";
    fsType = "btrfs";
    options = [ "subvol=log" ];
  };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/dfe1f7be-cadb-4319-b72e-e3b4ef791afe"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
